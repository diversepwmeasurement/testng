concurrency:
  cancel-in-progress: true
  group: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release'
    ) && format('ci-main-{0}', github.sha) || format('ci-main-{0}', github.ref) }}
jobs:
  build:
    env:
      TZ: ${{ matrix.tz }}
    name: ${{ matrix.name }}
    needs: matrix_prep
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 10
    - continue-on-error: true
      if: ${{ matrix.oracle_java_website != '' }}
      name: Set up Java ${{ matrix.java_version }}, oracle
      uses: oracle-actions/setup-java@83e2004a40aaa491fbc6b4697353b9a75b095efb
      with:
        release: ${{ matrix.java_version }}
        website: ${{ matrix.oracle_java_website }}
    - continue-on-error: true
      name: Set up Java 17 and ${{ matrix.non_ea_java_version }}, ${{ matrix.java_distribution
        }}
      uses: actions/setup-java@v4
      with:
        architecture: x64
        distribution: ${{ matrix.java_distribution }}
        java-version: '${{ matrix.non_ea_java_version }}

          17

          '
    - continue-on-error: true
      name: Steps to reproduce
      uses: actions/github-script@v7
      with:
        script: 'console.log(''The following command might help reproducing CI results,
          use Java ${{ matrix.java_version }}'')

          console.log(''TZ="${{ matrix.tz }}" ./gradlew build ${{ matrix.extraGradleArgs
          }} -Ptestng.test.extra.jvmargs="${{ matrix.testExtraJvmArgs }}" -PtestDisableCaching="${{
          matrix.testDisableCaching }}"'')

          '
    - continue-on-error: true
      id: build_id
      name: Generate unique build id
      run: echo "unique_id=$(date +%s)" >> $GITHUB_OUTPUT
    - continue-on-error: true
      id: run_test_cases
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: '--no-parallel --no-daemon --scan

          build

          ${{ matrix.extraGradleArgs }}

          '
        job-id: jdk${{ matrix.jdk.version }}
        properties: 'testng.test.extra.jvmargs=${{ matrix.testExtraJvmArgs }}

          testDisableCaching=${{ matrix.testDisableCaching }}

          jdkBuildVersion=17

          jdkTestVersion=${{ matrix.java_version }}

          jdkTestVendor=${{ matrix.java_vendor }}

          # We provision JDKs with GitHub Actions for caching purposes, so Gradle
          should rather fail in case JDK is not found

          org.gradle.java.installations.auto-download=false

          '
    - continue-on-error: true
      if: ${{ failure() && steps.run_test_cases.outcome == 'failure' }}
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-${{ matrix.jdk.group }}-${{ matrix.jdk.version }}-${{
          steps.build_id.outputs.unique_id }}
        path: testng-core/build/reports/tests/test/**
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
  matrix_prep:
    env:
      MATRIX_JOBS: 7
    name: Matrix Preparation
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - continue-on-error: true
      id: set-matrix
      run: 'node .github/workflows/matrix.js

        '
name: Test
on:
  repository_dispatch:
    types: trigger-ga___test.yml
